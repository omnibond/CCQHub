#!/usr/bin/python2.7
#Copyright Omnibond Systems, LLC. All rights reserved.

# This file is part of CCQHub.

# CCQHub is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.

# CCQHub is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

import argparse
import sys
import traceback
import os

sys.path.append(os.path.dirname(os.path.realpath(__file__))+str("/../src"))
import ccqHubMethods
import credentials


def main():
    parser = argparse.ArgumentParser(description="A ccqHub utility that allows an administrator to delete an existing target configured in ccqHub.")
    parser.add_argument('-V', '--version', action='version', version='ccqHubDeleteTarget (version 0.1)')
    parser.add_argument('-i', '--identity', help="The path to the ccqHub generated API key. This key is generated by the ccqHub application when it is first run", default=None, required=True)
    parser.add_argument('-tn', '--targetName', help="The name of the scheduler that is being configured.", default=None)

    args = parser.parse_args()

    identity = args.identity
    targetName = args.targetName

    try:
        # Check if the user has the key that is authorized to perform the actions
        keyFile = open(str(identity), "r")
        key = keyFile.readline()
        subject = {"type": "key", "subject": str(key)}
        results = credentials.evaluatePermssions(subject, ["ccqHubAdmin"])
        if results['status'] != "success":
            print results['payload']
            sys.exit(0)
        else:
            # Walk through for the user to be able to interactively delete a ccqHub Target, if arguments are supplied on the commandline then this is skipped
            if targetName is None:
                targetName = raw_input("Please enter the target name of the target you want to delete:\n")

            response = ccqHubMethods.queryObj(None, "RecType-Target-targetName-" + str(targetName) + "-schedulerType-", "query", "json", "beginsWith")
            if response['status'] == "success":
                results = response['payload']
                if len(results) == 0:
                    print "Unable to find the target (" + str(targetName) + ") in this installation of ccqHub. Please check the name and try again."
                    sys.exit(0)
                else:
                    # Now that we have the object we need to delete it.
                    for item in results:
                        res = ccqHubMethods.handleObj("delete", item)
                        if res['status'] != "success":
                            print res['payload']
                            sys.exit(0)
                        else:
                            print "Successfully deleted the target (" + str(targetName) + ") from ccqHub."
                            sys.exit(0)
            else:
                print "Unable to verify target name for deletion please try again later."
                print response['payload']
                sys.exit(0)

    except Exception as e:
        print "Unable to open the key file provided."
        print traceback.format_exc(e)
        sys.exit(0)

main()


