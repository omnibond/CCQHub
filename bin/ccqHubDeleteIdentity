#!/usr/bin/python2.7
#Copyright Omnibond Systems, LLC. All rights reserved.

# This file is part of CCQHub.

# CCQHub is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.

# CCQHub is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Lesser General Public License for more details.

import argparse
import sys
import traceback
import uuid
import os

sys.path.append(os.path.dirname(os.path.realpath(__file__))+str("/../src"))
import ccqHubMethods
import credentials

def main():
    parser = argparse.ArgumentParser(description="A ccqHub utility that allows an administrator to delete an identity from ccqHub.")
    parser.add_argument('-V', '--version', action='version', version='ccqHubDeleteIdentity (version 0.1)')
    parser.add_argument('-i', '--ccqHubAdminKeyPath', help="The path to the ccqHubAdmin.key file. This file was generated by the ccqHubInstaller application and by default it is located in the .keys directory where ccqHub is installed. Make sure you have read access to this file before continuing.\n\n", default=None)

    # The name of the identity being created.
    parser.add_argument('-in', '--identityName', help="The name of the identity being added to ccqHub.", default=None)

    args = parser.parse_args()

    ccqHubAdminKeyPath = args.ccqHubAdminKeyPath
    identityName = args.identityName

    try:
        # Validate that the user calling the command has access to the ccqHubAdminKey file
        values = credentials.validateCcqHubAdminKey(ccqHubAdminKeyPath)
        if values['status'] != "success":
            print values['payload']['error']
            print values['payload']['traceback']
            sys.exit(0)
        else:
            key = values['payload']

        # Validate the key obtained by the file
        subject = {"subjectType": "key", "subject": str(key), "subjectRecType": "Identity"}
        results = credentials.evaluatePermssions(subject, ["ccqHubAdmin"])
        if results['status'] != "success":
            print results['payload']
            sys.exit(0)
        else:
            # Do stuff to delete existing identity

            print ""
    except Exception as e:
        print "ccqHubAddIdentity encountered an unexpected error."
        print traceback.format_exc(e)

main()